// Generated by view binder compiler. Do not edit!
package br.com.pibsantalucia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatRadioButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import br.com.pibsantalucia.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.mikhaellopez.circularimageview.CircularImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import mk.webfactory.dz.maskededittext.MaskedEditText;

public final class DataPersonalFragmentBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final CircularImageView circleImageViewCongregado;

  @NonNull
  public final ConstraintLayout constraintLayoutReference1;

  @NonNull
  public final ConstraintLayout constraintLayoutReference2;

  @NonNull
  public final ConstraintLayout constraintLayoutReference3;

  @NonNull
  public final MaskedEditText editTextCongregadoCpf;

  @NonNull
  public final MaskedEditText editTextCongregadoDateBirth;

  @NonNull
  public final AppCompatRadioButton radioButtonCongregadoF;

  @NonNull
  public final AppCompatRadioButton radioButtonCongregadoM;

  @NonNull
  public final RadioGroup radioGroupCongregadoSexo;

  @NonNull
  public final TextInputEditText textInputEditTextCongregadoName;

  @NonNull
  public final TextInputEditText textInputEditTextCongregadoNationality;

  @NonNull
  public final TextInputEditText textInputEditTextCongregadoNaturalness;

  @NonNull
  public final TextInputEditText textInputEditTextCongregadoProfession;

  @NonNull
  public final TextInputEditText textInputEditTextCongregadoTypeBlood;

  @NonNull
  public final TextInputLayout textInputLayoutCongregadoCpf;

  @NonNull
  public final TextInputLayout textInputLayoutCongregadoDateBirth;

  @NonNull
  public final TextInputLayout textInputLayoutCongregadoName;

  @NonNull
  public final TextInputLayout textInputLayoutCongregadoNationality;

  @NonNull
  public final TextInputLayout textInputLayoutCongregadoNaturalness;

  @NonNull
  public final TextInputLayout textInputLayoutCongregadoProfession;

  @NonNull
  public final TextInputLayout textInputLayoutCongregadoTypeBlood;

  private DataPersonalFragmentBinding(@NonNull ScrollView rootView,
      @NonNull CircularImageView circleImageViewCongregado,
      @NonNull ConstraintLayout constraintLayoutReference1,
      @NonNull ConstraintLayout constraintLayoutReference2,
      @NonNull ConstraintLayout constraintLayoutReference3,
      @NonNull MaskedEditText editTextCongregadoCpf,
      @NonNull MaskedEditText editTextCongregadoDateBirth,
      @NonNull AppCompatRadioButton radioButtonCongregadoF,
      @NonNull AppCompatRadioButton radioButtonCongregadoM,
      @NonNull RadioGroup radioGroupCongregadoSexo,
      @NonNull TextInputEditText textInputEditTextCongregadoName,
      @NonNull TextInputEditText textInputEditTextCongregadoNationality,
      @NonNull TextInputEditText textInputEditTextCongregadoNaturalness,
      @NonNull TextInputEditText textInputEditTextCongregadoProfession,
      @NonNull TextInputEditText textInputEditTextCongregadoTypeBlood,
      @NonNull TextInputLayout textInputLayoutCongregadoCpf,
      @NonNull TextInputLayout textInputLayoutCongregadoDateBirth,
      @NonNull TextInputLayout textInputLayoutCongregadoName,
      @NonNull TextInputLayout textInputLayoutCongregadoNationality,
      @NonNull TextInputLayout textInputLayoutCongregadoNaturalness,
      @NonNull TextInputLayout textInputLayoutCongregadoProfession,
      @NonNull TextInputLayout textInputLayoutCongregadoTypeBlood) {
    this.rootView = rootView;
    this.circleImageViewCongregado = circleImageViewCongregado;
    this.constraintLayoutReference1 = constraintLayoutReference1;
    this.constraintLayoutReference2 = constraintLayoutReference2;
    this.constraintLayoutReference3 = constraintLayoutReference3;
    this.editTextCongregadoCpf = editTextCongregadoCpf;
    this.editTextCongregadoDateBirth = editTextCongregadoDateBirth;
    this.radioButtonCongregadoF = radioButtonCongregadoF;
    this.radioButtonCongregadoM = radioButtonCongregadoM;
    this.radioGroupCongregadoSexo = radioGroupCongregadoSexo;
    this.textInputEditTextCongregadoName = textInputEditTextCongregadoName;
    this.textInputEditTextCongregadoNationality = textInputEditTextCongregadoNationality;
    this.textInputEditTextCongregadoNaturalness = textInputEditTextCongregadoNaturalness;
    this.textInputEditTextCongregadoProfession = textInputEditTextCongregadoProfession;
    this.textInputEditTextCongregadoTypeBlood = textInputEditTextCongregadoTypeBlood;
    this.textInputLayoutCongregadoCpf = textInputLayoutCongregadoCpf;
    this.textInputLayoutCongregadoDateBirth = textInputLayoutCongregadoDateBirth;
    this.textInputLayoutCongregadoName = textInputLayoutCongregadoName;
    this.textInputLayoutCongregadoNationality = textInputLayoutCongregadoNationality;
    this.textInputLayoutCongregadoNaturalness = textInputLayoutCongregadoNaturalness;
    this.textInputLayoutCongregadoProfession = textInputLayoutCongregadoProfession;
    this.textInputLayoutCongregadoTypeBlood = textInputLayoutCongregadoTypeBlood;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static DataPersonalFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DataPersonalFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.data_personal_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DataPersonalFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.circleImageViewCongregado;
      CircularImageView circleImageViewCongregado = rootView.findViewById(id);
      if (circleImageViewCongregado == null) {
        break missingId;
      }

      id = R.id.constraintLayoutReference1;
      ConstraintLayout constraintLayoutReference1 = rootView.findViewById(id);
      if (constraintLayoutReference1 == null) {
        break missingId;
      }

      id = R.id.constraintLayoutReference2;
      ConstraintLayout constraintLayoutReference2 = rootView.findViewById(id);
      if (constraintLayoutReference2 == null) {
        break missingId;
      }

      id = R.id.constraintLayoutReference3;
      ConstraintLayout constraintLayoutReference3 = rootView.findViewById(id);
      if (constraintLayoutReference3 == null) {
        break missingId;
      }

      id = R.id.editTextCongregadoCpf;
      MaskedEditText editTextCongregadoCpf = rootView.findViewById(id);
      if (editTextCongregadoCpf == null) {
        break missingId;
      }

      id = R.id.editTextCongregadoDateBirth;
      MaskedEditText editTextCongregadoDateBirth = rootView.findViewById(id);
      if (editTextCongregadoDateBirth == null) {
        break missingId;
      }

      id = R.id.radioButtonCongregadoF;
      AppCompatRadioButton radioButtonCongregadoF = rootView.findViewById(id);
      if (radioButtonCongregadoF == null) {
        break missingId;
      }

      id = R.id.radioButtonCongregadoM;
      AppCompatRadioButton radioButtonCongregadoM = rootView.findViewById(id);
      if (radioButtonCongregadoM == null) {
        break missingId;
      }

      id = R.id.radioGroupCongregadoSexo;
      RadioGroup radioGroupCongregadoSexo = rootView.findViewById(id);
      if (radioGroupCongregadoSexo == null) {
        break missingId;
      }

      id = R.id.textInputEditTextCongregadoName;
      TextInputEditText textInputEditTextCongregadoName = rootView.findViewById(id);
      if (textInputEditTextCongregadoName == null) {
        break missingId;
      }

      id = R.id.textInputEditTextCongregadoNationality;
      TextInputEditText textInputEditTextCongregadoNationality = rootView.findViewById(id);
      if (textInputEditTextCongregadoNationality == null) {
        break missingId;
      }

      id = R.id.textInputEditTextCongregadoNaturalness;
      TextInputEditText textInputEditTextCongregadoNaturalness = rootView.findViewById(id);
      if (textInputEditTextCongregadoNaturalness == null) {
        break missingId;
      }

      id = R.id.textInputEditTextCongregadoProfession;
      TextInputEditText textInputEditTextCongregadoProfession = rootView.findViewById(id);
      if (textInputEditTextCongregadoProfession == null) {
        break missingId;
      }

      id = R.id.textInputEditTextCongregadoTypeBlood;
      TextInputEditText textInputEditTextCongregadoTypeBlood = rootView.findViewById(id);
      if (textInputEditTextCongregadoTypeBlood == null) {
        break missingId;
      }

      id = R.id.textInputLayoutCongregadoCpf;
      TextInputLayout textInputLayoutCongregadoCpf = rootView.findViewById(id);
      if (textInputLayoutCongregadoCpf == null) {
        break missingId;
      }

      id = R.id.textInputLayoutCongregadoDateBirth;
      TextInputLayout textInputLayoutCongregadoDateBirth = rootView.findViewById(id);
      if (textInputLayoutCongregadoDateBirth == null) {
        break missingId;
      }

      id = R.id.textInputLayoutCongregadoName;
      TextInputLayout textInputLayoutCongregadoName = rootView.findViewById(id);
      if (textInputLayoutCongregadoName == null) {
        break missingId;
      }

      id = R.id.textInputLayoutCongregadoNationality;
      TextInputLayout textInputLayoutCongregadoNationality = rootView.findViewById(id);
      if (textInputLayoutCongregadoNationality == null) {
        break missingId;
      }

      id = R.id.textInputLayoutCongregadoNaturalness;
      TextInputLayout textInputLayoutCongregadoNaturalness = rootView.findViewById(id);
      if (textInputLayoutCongregadoNaturalness == null) {
        break missingId;
      }

      id = R.id.textInputLayoutCongregadoProfession;
      TextInputLayout textInputLayoutCongregadoProfession = rootView.findViewById(id);
      if (textInputLayoutCongregadoProfession == null) {
        break missingId;
      }

      id = R.id.textInputLayoutCongregadoTypeBlood;
      TextInputLayout textInputLayoutCongregadoTypeBlood = rootView.findViewById(id);
      if (textInputLayoutCongregadoTypeBlood == null) {
        break missingId;
      }

      return new DataPersonalFragmentBinding((ScrollView) rootView, circleImageViewCongregado,
          constraintLayoutReference1, constraintLayoutReference2, constraintLayoutReference3,
          editTextCongregadoCpf, editTextCongregadoDateBirth, radioButtonCongregadoF,
          radioButtonCongregadoM, radioGroupCongregadoSexo, textInputEditTextCongregadoName,
          textInputEditTextCongregadoNationality, textInputEditTextCongregadoNaturalness,
          textInputEditTextCongregadoProfession, textInputEditTextCongregadoTypeBlood,
          textInputLayoutCongregadoCpf, textInputLayoutCongregadoDateBirth,
          textInputLayoutCongregadoName, textInputLayoutCongregadoNationality,
          textInputLayoutCongregadoNaturalness, textInputLayoutCongregadoProfession,
          textInputLayoutCongregadoTypeBlood);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
