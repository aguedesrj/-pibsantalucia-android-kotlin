// Generated by view binder compiler. Do not edit!
package br.com.pibsantalucia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.ContentLoadingProgressBar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import br.com.pibsantalucia.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MembrosFragmentBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton buttonMembrosFragment;

  @NonNull
  public final ConstraintLayout constraintLayoutMembrosFragmentMessage;

  @NonNull
  public final ContentLoadingProgressBar progressBarMembrosFragment;

  @NonNull
  public final RecyclerView recyclerViewMembrosFragment;

  @NonNull
  public final TextView textViewMembrosFragmentMessage;

  private MembrosFragmentBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton buttonMembrosFragment,
      @NonNull ConstraintLayout constraintLayoutMembrosFragmentMessage,
      @NonNull ContentLoadingProgressBar progressBarMembrosFragment,
      @NonNull RecyclerView recyclerViewMembrosFragment,
      @NonNull TextView textViewMembrosFragmentMessage) {
    this.rootView = rootView;
    this.buttonMembrosFragment = buttonMembrosFragment;
    this.constraintLayoutMembrosFragmentMessage = constraintLayoutMembrosFragmentMessage;
    this.progressBarMembrosFragment = progressBarMembrosFragment;
    this.recyclerViewMembrosFragment = recyclerViewMembrosFragment;
    this.textViewMembrosFragmentMessage = textViewMembrosFragmentMessage;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MembrosFragmentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MembrosFragmentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.membros_fragment, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MembrosFragmentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonMembrosFragment;
      AppCompatButton buttonMembrosFragment = rootView.findViewById(id);
      if (buttonMembrosFragment == null) {
        break missingId;
      }

      id = R.id.constraintLayoutMembrosFragmentMessage;
      ConstraintLayout constraintLayoutMembrosFragmentMessage = rootView.findViewById(id);
      if (constraintLayoutMembrosFragmentMessage == null) {
        break missingId;
      }

      id = R.id.progressBarMembrosFragment;
      ContentLoadingProgressBar progressBarMembrosFragment = rootView.findViewById(id);
      if (progressBarMembrosFragment == null) {
        break missingId;
      }

      id = R.id.recyclerViewMembrosFragment;
      RecyclerView recyclerViewMembrosFragment = rootView.findViewById(id);
      if (recyclerViewMembrosFragment == null) {
        break missingId;
      }

      id = R.id.textViewMembrosFragmentMessage;
      TextView textViewMembrosFragmentMessage = rootView.findViewById(id);
      if (textViewMembrosFragmentMessage == null) {
        break missingId;
      }

      return new MembrosFragmentBinding((ConstraintLayout) rootView, buttonMembrosFragment,
          constraintLayoutMembrosFragmentMessage, progressBarMembrosFragment,
          recyclerViewMembrosFragment, textViewMembrosFragmentMessage);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
