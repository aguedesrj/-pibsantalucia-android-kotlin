// Generated by view binder compiler. Do not edit!
package br.com.pibsantalucia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import br.com.pibsantalucia.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EscalaAdapterBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final RecyclerView childRecyclerView;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ConstraintLayout constraintLayoutEscalaAdapterNoMembro;

  @NonNull
  public final ImageButton imageButtonAddEscalaAdapter;

  @NonNull
  public final TextView textView2;

  @NonNull
  public final TextView textViewAddEscalaDescription;

  private EscalaAdapterBinding(@NonNull ConstraintLayout rootView,
      @NonNull RecyclerView childRecyclerView, @NonNull ConstraintLayout constraintLayout,
      @NonNull ConstraintLayout constraintLayoutEscalaAdapterNoMembro,
      @NonNull ImageButton imageButtonAddEscalaAdapter, @NonNull TextView textView2,
      @NonNull TextView textViewAddEscalaDescription) {
    this.rootView = rootView;
    this.childRecyclerView = childRecyclerView;
    this.constraintLayout = constraintLayout;
    this.constraintLayoutEscalaAdapterNoMembro = constraintLayoutEscalaAdapterNoMembro;
    this.imageButtonAddEscalaAdapter = imageButtonAddEscalaAdapter;
    this.textView2 = textView2;
    this.textViewAddEscalaDescription = textViewAddEscalaDescription;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EscalaAdapterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EscalaAdapterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.escala_adapter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EscalaAdapterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.childRecyclerView;
      RecyclerView childRecyclerView = rootView.findViewById(id);
      if (childRecyclerView == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = rootView.findViewById(id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.constraintLayoutEscalaAdapterNoMembro;
      ConstraintLayout constraintLayoutEscalaAdapterNoMembro = rootView.findViewById(id);
      if (constraintLayoutEscalaAdapterNoMembro == null) {
        break missingId;
      }

      id = R.id.imageButtonAddEscalaAdapter;
      ImageButton imageButtonAddEscalaAdapter = rootView.findViewById(id);
      if (imageButtonAddEscalaAdapter == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = rootView.findViewById(id);
      if (textView2 == null) {
        break missingId;
      }

      id = R.id.textViewAddEscalaDescription;
      TextView textViewAddEscalaDescription = rootView.findViewById(id);
      if (textViewAddEscalaDescription == null) {
        break missingId;
      }

      return new EscalaAdapterBinding((ConstraintLayout) rootView, childRecyclerView,
          constraintLayout, constraintLayoutEscalaAdapterNoMembro, imageButtonAddEscalaAdapter,
          textView2, textViewAddEscalaDescription);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
